// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package vault

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-vault/sdk/v4/go/vault"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := vault.NewAuthBackend(ctx, "example", &vault.AuthBackendArgs{
// 			Tune: &vault.AuthBackendTuneArgs{
// 				ListingVisibility: pulumi.String("unauth"),
// 				MaxLeaseTtl:       pulumi.String("90000s"),
// 			},
// 			Type: pulumi.String("github"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Auth methods can be imported using the `path`, e.g.
//
// ```sh
//  $ pulumi import vault:index/authBackend:AuthBackend example github
// ```
type AuthBackend struct {
	pulumi.CustomResourceState

	// The accessor for this auth method
	Accessor pulumi.StringOutput `pulumi:"accessor"`
	// (Optional; Deprecated, use `tune.default_lease_ttl` if you are using Vault provider version >= 1.8) The default lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	DefaultLeaseTtlSeconds pulumi.IntOutput `pulumi:"defaultLeaseTtlSeconds"`
	// A description of the auth method
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies whether to show this mount in
	// the UI-specific listing endpoint. Valid values are "unauth" or "hidden".
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	ListingVisibility pulumi.StringOutput `pulumi:"listingVisibility"`
	// Specifies if the auth method is local only.
	Local pulumi.BoolPtrOutput `pulumi:"local"`
	// (Optional; Deprecated, use `tune.max_lease_ttl` if you are using Vault provider version >= 1.8) The maximum lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	MaxLeaseTtlSeconds pulumi.IntOutput `pulumi:"maxLeaseTtlSeconds"`
	// The path to mount the auth method — this defaults to the name of the type
	Path pulumi.StringOutput `pulumi:"path"`
	// Extra configuration block. Structure is documented below.
	Tune AuthBackendTuneOutput `pulumi:"tune"`
	// The name of the auth method type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewAuthBackend registers a new resource with the given unique name, arguments, and options.
func NewAuthBackend(ctx *pulumi.Context,
	name string, args *AuthBackendArgs, opts ...pulumi.ResourceOption) (*AuthBackend, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource AuthBackend
	err := ctx.RegisterResource("vault:index/authBackend:AuthBackend", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthBackend gets an existing AuthBackend resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthBackend(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthBackendState, opts ...pulumi.ResourceOption) (*AuthBackend, error) {
	var resource AuthBackend
	err := ctx.ReadResource("vault:index/authBackend:AuthBackend", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthBackend resources.
type authBackendState struct {
	// The accessor for this auth method
	Accessor *string `pulumi:"accessor"`
	// (Optional; Deprecated, use `tune.default_lease_ttl` if you are using Vault provider version >= 1.8) The default lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	DefaultLeaseTtlSeconds *int `pulumi:"defaultLeaseTtlSeconds"`
	// A description of the auth method
	Description *string `pulumi:"description"`
	// Specifies whether to show this mount in
	// the UI-specific listing endpoint. Valid values are "unauth" or "hidden".
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	ListingVisibility *string `pulumi:"listingVisibility"`
	// Specifies if the auth method is local only.
	Local *bool `pulumi:"local"`
	// (Optional; Deprecated, use `tune.max_lease_ttl` if you are using Vault provider version >= 1.8) The maximum lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	MaxLeaseTtlSeconds *int `pulumi:"maxLeaseTtlSeconds"`
	// The path to mount the auth method — this defaults to the name of the type
	Path *string `pulumi:"path"`
	// Extra configuration block. Structure is documented below.
	Tune *AuthBackendTune `pulumi:"tune"`
	// The name of the auth method type
	Type *string `pulumi:"type"`
}

type AuthBackendState struct {
	// The accessor for this auth method
	Accessor pulumi.StringPtrInput
	// (Optional; Deprecated, use `tune.default_lease_ttl` if you are using Vault provider version >= 1.8) The default lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	DefaultLeaseTtlSeconds pulumi.IntPtrInput
	// A description of the auth method
	Description pulumi.StringPtrInput
	// Specifies whether to show this mount in
	// the UI-specific listing endpoint. Valid values are "unauth" or "hidden".
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	ListingVisibility pulumi.StringPtrInput
	// Specifies if the auth method is local only.
	Local pulumi.BoolPtrInput
	// (Optional; Deprecated, use `tune.max_lease_ttl` if you are using Vault provider version >= 1.8) The maximum lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	MaxLeaseTtlSeconds pulumi.IntPtrInput
	// The path to mount the auth method — this defaults to the name of the type
	Path pulumi.StringPtrInput
	// Extra configuration block. Structure is documented below.
	Tune AuthBackendTunePtrInput
	// The name of the auth method type
	Type pulumi.StringPtrInput
}

func (AuthBackendState) ElementType() reflect.Type {
	return reflect.TypeOf((*authBackendState)(nil)).Elem()
}

type authBackendArgs struct {
	// (Optional; Deprecated, use `tune.default_lease_ttl` if you are using Vault provider version >= 1.8) The default lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	DefaultLeaseTtlSeconds *int `pulumi:"defaultLeaseTtlSeconds"`
	// A description of the auth method
	Description *string `pulumi:"description"`
	// Specifies whether to show this mount in
	// the UI-specific listing endpoint. Valid values are "unauth" or "hidden".
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	ListingVisibility *string `pulumi:"listingVisibility"`
	// Specifies if the auth method is local only.
	Local *bool `pulumi:"local"`
	// (Optional; Deprecated, use `tune.max_lease_ttl` if you are using Vault provider version >= 1.8) The maximum lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	MaxLeaseTtlSeconds *int `pulumi:"maxLeaseTtlSeconds"`
	// The path to mount the auth method — this defaults to the name of the type
	Path *string `pulumi:"path"`
	// Extra configuration block. Structure is documented below.
	Tune *AuthBackendTune `pulumi:"tune"`
	// The name of the auth method type
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a AuthBackend resource.
type AuthBackendArgs struct {
	// (Optional; Deprecated, use `tune.default_lease_ttl` if you are using Vault provider version >= 1.8) The default lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	DefaultLeaseTtlSeconds pulumi.IntPtrInput
	// A description of the auth method
	Description pulumi.StringPtrInput
	// Specifies whether to show this mount in
	// the UI-specific listing endpoint. Valid values are "unauth" or "hidden".
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	ListingVisibility pulumi.StringPtrInput
	// Specifies if the auth method is local only.
	Local pulumi.BoolPtrInput
	// (Optional; Deprecated, use `tune.max_lease_ttl` if you are using Vault provider version >= 1.8) The maximum lease duration in seconds.
	//
	// Deprecated: Use the tune configuration block to avoid forcing creation of new resource on an update
	MaxLeaseTtlSeconds pulumi.IntPtrInput
	// The path to mount the auth method — this defaults to the name of the type
	Path pulumi.StringPtrInput
	// Extra configuration block. Structure is documented below.
	Tune AuthBackendTunePtrInput
	// The name of the auth method type
	Type pulumi.StringInput
}

func (AuthBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authBackendArgs)(nil)).Elem()
}

type AuthBackendInput interface {
	pulumi.Input

	ToAuthBackendOutput() AuthBackendOutput
	ToAuthBackendOutputWithContext(ctx context.Context) AuthBackendOutput
}

func (*AuthBackend) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackend)(nil))
}

func (i *AuthBackend) ToAuthBackendOutput() AuthBackendOutput {
	return i.ToAuthBackendOutputWithContext(context.Background())
}

func (i *AuthBackend) ToAuthBackendOutputWithContext(ctx context.Context) AuthBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendOutput)
}

func (i *AuthBackend) ToAuthBackendPtrOutput() AuthBackendPtrOutput {
	return i.ToAuthBackendPtrOutputWithContext(context.Background())
}

func (i *AuthBackend) ToAuthBackendPtrOutputWithContext(ctx context.Context) AuthBackendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendPtrOutput)
}

type AuthBackendPtrInput interface {
	pulumi.Input

	ToAuthBackendPtrOutput() AuthBackendPtrOutput
	ToAuthBackendPtrOutputWithContext(ctx context.Context) AuthBackendPtrOutput
}

type authBackendPtrType AuthBackendArgs

func (*authBackendPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthBackend)(nil))
}

func (i *authBackendPtrType) ToAuthBackendPtrOutput() AuthBackendPtrOutput {
	return i.ToAuthBackendPtrOutputWithContext(context.Background())
}

func (i *authBackendPtrType) ToAuthBackendPtrOutputWithContext(ctx context.Context) AuthBackendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendPtrOutput)
}

// AuthBackendArrayInput is an input type that accepts AuthBackendArray and AuthBackendArrayOutput values.
// You can construct a concrete instance of `AuthBackendArrayInput` via:
//
//          AuthBackendArray{ AuthBackendArgs{...} }
type AuthBackendArrayInput interface {
	pulumi.Input

	ToAuthBackendArrayOutput() AuthBackendArrayOutput
	ToAuthBackendArrayOutputWithContext(context.Context) AuthBackendArrayOutput
}

type AuthBackendArray []AuthBackendInput

func (AuthBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AuthBackend)(nil))
}

func (i AuthBackendArray) ToAuthBackendArrayOutput() AuthBackendArrayOutput {
	return i.ToAuthBackendArrayOutputWithContext(context.Background())
}

func (i AuthBackendArray) ToAuthBackendArrayOutputWithContext(ctx context.Context) AuthBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendArrayOutput)
}

// AuthBackendMapInput is an input type that accepts AuthBackendMap and AuthBackendMapOutput values.
// You can construct a concrete instance of `AuthBackendMapInput` via:
//
//          AuthBackendMap{ "key": AuthBackendArgs{...} }
type AuthBackendMapInput interface {
	pulumi.Input

	ToAuthBackendMapOutput() AuthBackendMapOutput
	ToAuthBackendMapOutputWithContext(context.Context) AuthBackendMapOutput
}

type AuthBackendMap map[string]AuthBackendInput

func (AuthBackendMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AuthBackend)(nil))
}

func (i AuthBackendMap) ToAuthBackendMapOutput() AuthBackendMapOutput {
	return i.ToAuthBackendMapOutputWithContext(context.Background())
}

func (i AuthBackendMap) ToAuthBackendMapOutputWithContext(ctx context.Context) AuthBackendMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthBackendMapOutput)
}

type AuthBackendOutput struct {
	*pulumi.OutputState
}

func (AuthBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthBackend)(nil))
}

func (o AuthBackendOutput) ToAuthBackendOutput() AuthBackendOutput {
	return o
}

func (o AuthBackendOutput) ToAuthBackendOutputWithContext(ctx context.Context) AuthBackendOutput {
	return o
}

func (o AuthBackendOutput) ToAuthBackendPtrOutput() AuthBackendPtrOutput {
	return o.ToAuthBackendPtrOutputWithContext(context.Background())
}

func (o AuthBackendOutput) ToAuthBackendPtrOutputWithContext(ctx context.Context) AuthBackendPtrOutput {
	return o.ApplyT(func(v AuthBackend) *AuthBackend {
		return &v
	}).(AuthBackendPtrOutput)
}

type AuthBackendPtrOutput struct {
	*pulumi.OutputState
}

func (AuthBackendPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthBackend)(nil))
}

func (o AuthBackendPtrOutput) ToAuthBackendPtrOutput() AuthBackendPtrOutput {
	return o
}

func (o AuthBackendPtrOutput) ToAuthBackendPtrOutputWithContext(ctx context.Context) AuthBackendPtrOutput {
	return o
}

type AuthBackendArrayOutput struct{ *pulumi.OutputState }

func (AuthBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AuthBackend)(nil))
}

func (o AuthBackendArrayOutput) ToAuthBackendArrayOutput() AuthBackendArrayOutput {
	return o
}

func (o AuthBackendArrayOutput) ToAuthBackendArrayOutputWithContext(ctx context.Context) AuthBackendArrayOutput {
	return o
}

func (o AuthBackendArrayOutput) Index(i pulumi.IntInput) AuthBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AuthBackend {
		return vs[0].([]AuthBackend)[vs[1].(int)]
	}).(AuthBackendOutput)
}

type AuthBackendMapOutput struct{ *pulumi.OutputState }

func (AuthBackendMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AuthBackend)(nil))
}

func (o AuthBackendMapOutput) ToAuthBackendMapOutput() AuthBackendMapOutput {
	return o
}

func (o AuthBackendMapOutput) ToAuthBackendMapOutputWithContext(ctx context.Context) AuthBackendMapOutput {
	return o
}

func (o AuthBackendMapOutput) MapIndex(k pulumi.StringInput) AuthBackendOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AuthBackend {
		return vs[0].(map[string]AuthBackend)[vs[1].(string)]
	}).(AuthBackendOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthBackendOutput{})
	pulumi.RegisterOutputType(AuthBackendPtrOutput{})
	pulumi.RegisterOutputType(AuthBackendArrayOutput{})
	pulumi.RegisterOutputType(AuthBackendMapOutput{})
}
